<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lance的学习路程</title>
    <link>http://example.org/</link>
    <description>Recent content on lance的学习路程</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 09 May 2020 18:38:02 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java包的管理</title>
      <link>http://example.org/posts/java%E5%8C%85%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 09 May 2020 18:38:02 +0800</pubDate>
      
      <guid>http://example.org/posts/java%E5%8C%85%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>Java的包管理与Maven初步  JVM的工作流程非常简单:
  执行一个类的字节码
  加入这个过程中碰到了新的类，加载它
  接着执行字节码
   到哪里加载类——类路径（Classpath） -classpath -cp
  类在加载会去classpath中逐个寻找对应的类，碰到的了jar包就会去解压，碰到文件夹就会去文件夹中找
  类的全限定类名（目录层级）唯一确定了一个类
  Jar包就是把许多类放在一起的压缩包
  传递性依赖
 你依赖的类还依赖了别的类 后果：假如要运行一个程序，不能只传一个Jar包，需要要所有引用的类放到 classpath    classpath hell(依赖地狱)
 全限定类名是类的唯一标识 当多个同名类出现在Classpath中,要引用哪个类？  哪个类排在前面引用谁   但是多个同名类里面的代码有可能不一样，会引用错误代码     包管理  要使用一些第3方类，就需要告诉JvM 从哪里找 包管理的本质就告诉JVM如何找到所需的第三方类库 以及成功到解决其中的冲突问题   Maven&amp;ndash;划时代的包管理   约定由于配置
  maven远远不止是包管理工具
  Maven的中央仓库
 按照一定的约定存储包    Maven的本地仓库</description>
    </item>
    
    <item>
      <title>第二篇博客</title>
      <link>http://example.org/posts/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 06 May 2020 18:56:16 +0800</pubDate>
      
      <guid>http://example.org/posts/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/</guid>
      <description>大家好，希望大家身体健康！ </description>
    </item>
    
    <item>
      <title>第一篇博客</title>
      <link>http://example.org/posts/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 06 May 2020 15:52:01 +0800</pubDate>
      
      <guid>http://example.org/posts/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</guid>
      <description>如何使用Hugo搭建博客   第一步去Hugo releases页面下载hugo应用程序
  进去入Hugo的官网，点击Quick Start快速开始
  从Step2开始复制代码到终端并运行，直到Step7
   注意：运行Step4代码会发生错误，提示如下： config-toml-unmarshal-failed-near-line-3-last-key-parsed-bare-keys-cannot-contain-&amp;lsquo;x00&amp;rsquo; 将config-toml中第4行所有的null删除，修改为 theme=&amp;quot;ananke&amp;rdquo;,指定博客主题的类型   编写完博客内容后，将draft的状态改为fasle,即非草稿状态
  运行Step5 hugo server -D 可预览草稿
  进入config.toml 可以修改支持的语言格式和博客的标题头和主题。
  将其推动到Github远程仓库。
  </description>
    </item>
    
  </channel>
</rss>